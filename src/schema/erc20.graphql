# import Account, DecodedTransaction from "core.graphql"

type TokenContract {
  account: Account
  symbol: String
  totalSupply: Long
}

interface ERC20Transaction {
  tokenContract: TokenContract
}

type TokenHolder {
  account: Account!
  tokenBalance: Long
}

type ERC20Transfer implements DecodedTransaction & ERC20Transaction {
  standard: String
  operation: String
  from: TokenHolder
  to: TokenHolder
  value: String
  tokenContract: TokenContract
}

type ERC20TransferFrom implements DecodedTransaction & ERC20Transaction {
  standard: String
  operation: String
  from: TokenHolder
  to: TokenHolder
  value: String
  spender: TokenHolder
  tokenContract: TokenContract
}

type ERC20Approve implements DecodedTransaction {
  standard: String
  operation: String
  from: TokenHolder
  spender: TokenHolder
  value: String
  tokenContract: TokenContract
}
